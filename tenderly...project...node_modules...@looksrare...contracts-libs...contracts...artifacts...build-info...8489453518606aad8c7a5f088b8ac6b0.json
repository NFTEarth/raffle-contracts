{
	"id": "8489453518606aad8c7a5f088b8ac6b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// Interfaces\nimport {IReentrancyGuard} from \"./interfaces/IReentrancyGuard.sol\";\n\n/**\n * @title PackableReentrancyGuard\n * @notice This contract protects against reentrancy attacks.\n *         It is adjusted from OpenZeppelin.\n *         The only difference between this contract and ReentrancyGuard\n *         is that _status is uint8 instead of uint256 so that it can be\n *         packed with other contracts' storage variables.\n * @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)\n */\nabstract contract PackableReentrancyGuard is IReentrancyGuard {\n    uint8 private _status;\n\n    /**\n     * @notice Modifier to wrap functions to prevent reentrancy calls.\n     */\n    modifier nonReentrant() {\n        if (_status == 2) {\n            revert ReentrancyFail();\n        }\n\n        _status = 2;\n        _;\n        _status = 1;\n    }\n\n    constructor() {\n        _status = 1;\n    }\n}\n"
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/**\n * @title IReentrancyGuard\n * @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)\n */\ninterface IReentrancyGuard {\n    /**\n     * @notice This is returned when there is a reentrant call.\n     */\n    error ReentrancyFail();\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
				"PackableReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyFail",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "LooksRare protocol team (ðŸ‘€,ðŸ’Ž)",
						"kind": "dev",
						"methods": {},
						"title": "PackableReentrancyGuard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PackableReentrancyGuard\",\"version\":1},\"userdoc\":{\"errors\":{\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract protects against reentrancy attacks.         It is adjusted from OpenZeppelin.         The only difference between this contract and ReentrancyGuard         is that _status is uint8 instead of uint256 so that it can be         packed with other contracts' storage variables.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":\"PackableReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol\":{\"keccak256\":\"0x5e20192cd10aaf26e371376508c532222ee5e363ac3a79f5a44247e003c793bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fafb52efa2e421a2f38c7cc6a31a7923d015cd0fab87d5de40e93d957e48dda\",\"dweb:/ipfs/QmUJtErrJpkdwqvy7HYmp1UbkzC6hcbDn8gavwivJ8U1Wd\"]},\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol:PackableReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ReentrancyFail()": [
								{
									"notice": "This is returned when there is a reentrant call."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"notice": "This contract protects against reentrancy attacks.         It is adjusted from OpenZeppelin.         The only difference between this contract and ReentrancyGuard         is that _status is uint8 instead of uint256 so that it can be         packed with other contracts' storage variables.",
						"version": 1
					}
				}
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
				"IReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyFail",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "LooksRare protocol team (ðŸ‘€,ðŸ’Ž)",
						"kind": "dev",
						"methods": {},
						"title": "IReentrancyGuard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyFail\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IReentrancyGuard\",\"version\":1},\"userdoc\":{\"errors\":{\"ReentrancyFail()\":[{\"notice\":\"This is returned when there is a reentrant call.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":\"IReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol\":{\"keccak256\":\"0xee628855706297e69737af64cf697bb21aedfbd16a6c470a1d8772ec9734cb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f639938e5303ea34b5d1c617497366fb4e5346a1ebb1edc2a324c347b603d9b7\",\"dweb:/ipfs/QmPF46PT9a9zU23sUH3d3YvEZG4hnqbP24WSQvkMHPRx8S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ReentrancyFail()": [
								{
									"notice": "This is returned when there is a reentrant call."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/PackableReentrancyGuard.sol",
					"exportedSymbols": {
						"IReentrancyGuard": [
							45
						],
						"PackableReentrancyGuard": [
							38
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol",
							"file": "./interfaces/IReentrancyGuard.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 39,
							"sourceUnit": 46,
							"src": "72:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "80:16:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IReentrancyGuard",
										"nameLocations": [
											"587:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 45,
										"src": "587:16:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "587:16:0"
								}
							],
							"canonicalName": "PackableReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "141:400:0",
								"text": " @title PackableReentrancyGuard\n @notice This contract protects against reentrancy attacks.\n         It is adjusted from OpenZeppelin.\n         The only difference between this contract and ReentrancyGuard\n         is that _status is uint8 instead of uint256 so that it can be\n         packed with other contracts' storage variables.\n @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)"
							},
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38,
								45
							],
							"name": "PackableReentrancyGuard",
							"nameLocation": "560:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "624:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "610:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 7,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "610:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "749:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "763:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 18,
												"nodeType": "IfStatement",
												"src": "759:66:0",
												"trueBody": {
													"id": 17,
													"nodeType": "Block",
													"src": "777:48:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 14,
																	"name": "ReentrancyFail",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "798:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "798:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 16,
															"nodeType": "RevertStatement",
															"src": "791:23:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "835:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "835:11:0"
											},
											{
												"id": 23,
												"nodeType": "PlaceholderStatement",
												"src": "856:1:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "877:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "867:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "867:11:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "638:82:0",
										"text": " @notice Modifier to wrap functions to prevent reentrancy calls."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "734:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:0"
									},
									"src": "725:160:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "905:28:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "915:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "915:11:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:0:0"
									},
									"scope": 38,
									"src": "891:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 39,
							"src": "542:393:0",
							"usedErrors": [
								44
							]
						}
					],
					"src": "32:904:0"
				},
				"id": 0
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/IReentrancyGuard.sol",
					"exportedSymbols": {
						"IReentrancyGuard": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 41,
								"nodeType": "StructuredDocumentation",
								"src": "58:81:1",
								"text": " @title IReentrancyGuard\n @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)"
							},
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "IReentrancyGuard",
							"nameLocation": "150:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "173:75:1",
										"text": " @notice This is returned when there is a reentrant call."
									},
									"errorSelector": "1bbee726",
									"id": 44,
									"name": "ReentrancyFail",
									"nameLocation": "259:14:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:1"
									},
									"src": "253:23:1"
								}
							],
							"scope": 46,
							"src": "140:138:1",
							"usedErrors": [
								44
							]
						}
					],
					"src": "32:247:1"
				},
				"id": 1
			}
		}
	}
}