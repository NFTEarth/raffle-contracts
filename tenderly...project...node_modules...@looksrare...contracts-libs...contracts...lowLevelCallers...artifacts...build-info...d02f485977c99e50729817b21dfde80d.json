{
	"id": "d02f485977c99e50729817b21dfde80d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// Interfaces\nimport {IWETH} from \"../interfaces/generic/IWETH.sol\";\n\n/**\n * @title LowLevelWETH\n * @notice This contract contains a function to transfer ETH with an option to wrap to WETH.\n *         If the ETH transfer fails within a gas limit, the amount in ETH is wrapped to WETH and then transferred.\n * @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)\n */\ncontract LowLevelWETH {\n    /**\n     * @notice It transfers ETH to a recipient with a specified gas limit.\n     *         If the original transfers fails, it wraps to WETH and transfers the WETH to recipient.\n     * @param _WETH WETH address\n     * @param _to Recipient address\n     * @param _amount Amount to transfer\n     * @param _gasLimit Gas limit to perform the ETH transfer\n     */\n    function _transferETHAndWrapIfFailWithGasLimit(\n        address _WETH,\n        address _to,\n        uint256 _amount,\n        uint256 _gasLimit\n    ) internal {\n        bool status;\n\n        assembly {\n            status := call(_gasLimit, _to, _amount, 0, 0, 0, 0)\n        }\n\n        if (!status) {\n            IWETH(_WETH).deposit{value: _amount}();\n            IWETH(_WETH).transfer(_to, _amount);\n        }\n    }\n}\n"
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0;\n\ninterface IWETH {\n    function deposit() external payable;\n\n    function transfer(address dst, uint256 wad) external returns (bool);\n\n    function withdraw(uint256 wad) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":{\"keccak256\":\"0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1\",\"dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
				"LowLevelWETH": {
					"abi": [],
					"devdoc": {
						"author": "LooksRare protocol team (ðŸ‘€,ðŸ’Ž)",
						"kind": "dev",
						"methods": {},
						"title": "LowLevelWETH",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":415:1225  contract LowLevelWETH {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":415:1225  contract LowLevelWETH {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd7c4815acd2365c44429321d80f745653eb7f64b7a46f07dd421c7ec8bc476864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fd7c4815acd2365c44429321d80f745653eb7f64b7a46f07dd421c7ec8bc476864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH29 0x4815ACD2365C44429321D80F745653EB7F64B7A46F07DD421C7EC8BC47 PUSH9 0x64736F6C6343000811 STOP CALLER ",
							"sourceMap": "415:810:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fd7c4815acd2365c44429321d80f745653eb7f64b7a46f07dd421c7ec8bc476864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH29 0x4815ACD2365C44429321D80F745653EB7F64B7A46F07DD421C7EC8BC47 PUSH9 0x64736F6C6343000811 STOP CALLER ",
							"sourceMap": "415:810:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_transferETHAndWrapIfFailWithGasLimit(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 1225,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd7c4815acd2365c44429321d80f745653eb7f64b7a46f07dd421c7ec8bc476864736f6c63430008110033",
									".code": [
										{
											"begin": 415,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 415,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 1225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 415,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 1225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 415,
											"end": 1225,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol",
								"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"LooksRare protocol team (\\ud83d\\udc40,\\ud83d\\udc8e)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LowLevelWETH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract contains a function to transfer ETH with an option to wrap to WETH.         If the ETH transfer fails within a gas limit, the amount in ETH is wrapped to WETH and then transferred.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":\"LowLevelWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol\":{\"keccak256\":\"0xa3ab534f52c32cb4beded86e0125eab755f9ae7452efd30b5ff33e2e016c127d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f87fb30208682737331ad355bd0f7061259ec960a8234cf21ae1899a10682cd1\",\"dweb:/ipfs/QmXA4PirJk1j8uNERnbK9MfPehzLP6kFhkVfd41NaeZaaJ\"]},\"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol\":{\"keccak256\":\"0xf6a850fd86fad68b9beb6e589b6d58df4585792e2bf7fb6e3c29002b469a8dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc06a6f9cefe29270bdc8b58e44938be8455555f767ffca6ed5759c179f086e6\",\"dweb:/ipfs/QmcrR7x5Xsd2piLyGGnwJ38c4rhbznSjjYrcRJYEbA9pRT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract contains a function to transfer ETH with an option to wrap to WETH.         If the ETH transfer fails within a gas limit, the amount in ETH is wrapped to WETH and then transferred.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol": {
				"ast": {
					"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							19
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IWETH",
							"nameLocation": "68:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "89:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:0:0"
									},
									"scope": 19,
									"src": "80:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "131:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "148:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "140:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "161:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "153:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:26:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "184:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:6:0"
									},
									"scope": 19,
									"src": "122:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "205:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "222:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "214:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:13:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 19,
									"src": "196:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "58:180:0",
							"usedErrors": []
						}
					],
					"src": "32:207:0"
				},
				"id": 0
			},
			"tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol": {
				"ast": {
					"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/lowLevelCallers/LowLevelWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							19
						],
						"LowLevelWETH": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "tenderly/project/node_modules/@looksrare/contracts-libs/contracts/interfaces/generic/IWETH.sol",
							"file": "../interfaces/generic/IWETH.sol",
							"id": 23,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 63,
							"sourceUnit": 20,
							"src": "72:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 22,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 19,
										"src": "80:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LowLevelWETH",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "128:286:1",
								"text": " @title LowLevelWETH\n @notice This contract contains a function to transfer ETH with an option to wrap to WETH.\n         If the ETH transfer fails within a gas limit, the amount in ETH is wrapped to WETH and then transferred.\n @author LooksRare protocol team (ðŸ‘€,ðŸ’Ž)"
							},
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "LowLevelWETH",
							"nameLocation": "424:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "966:257:1",
										"statements": [
											{
												"assignments": [
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "status",
														"nameLocation": "981:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "976:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"nodeType": "VariableDeclarationStatement",
												"src": "976:11:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1007:75:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1021:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "_gasLimit",
																		"nodeType": "YulIdentifier",
																		"src": "1036:9:1"
																	},
																	{
																		"name": "_to",
																		"nodeType": "YulIdentifier",
																		"src": "1047:3:1"
																	},
																	{
																		"name": "_amount",
																		"nodeType": "YulIdentifier",
																		"src": "1052:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1067:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1031:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:41:1"
															},
															"variableNames": [
																{
																	"name": "status",
																	"nodeType": "YulIdentifier",
																	"src": "1021:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": false,
														"src": "1052:7:1",
														"valueSize": 1
													},
													{
														"declaration": 33,
														"isOffset": false,
														"isSlot": false,
														"src": "1036:9:1",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "1047:3:1",
														"valueSize": 1
													},
													{
														"declaration": 37,
														"isOffset": false,
														"isSlot": false,
														"src": "1021:6:1",
														"valueSize": 1
													}
												],
												"id": 39,
												"nodeType": "InlineAssembly",
												"src": "998:84:1"
											},
											{
												"condition": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1096:7:1",
													"subExpression": {
														"id": 40,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1097:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "1092:125:1",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "1105:112:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 43,
																					"name": "_WETH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "1125:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 42,
																				"name": "IWETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "1119:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWETH_$19_$",
																					"typeString": "type(contract IWETH)"
																				}
																			},
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1119:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH_$19",
																				"typeString": "contract IWETH"
																			}
																		},
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1132:7:1",
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "1119:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 46,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "1147:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1119:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1119:38:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "1119:38:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 54,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "1193:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 55,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "1198:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 51,
																				"name": "_WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "1177:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 50,
																			"name": "IWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "1171:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH_$19_$",
																				"typeString": "type(contract IWETH)"
																			}
																		},
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1171:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$19",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1184:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "1171:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1171:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 57,
															"nodeType": "ExpressionStatement",
															"src": "1171:35:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "443:360:1",
										"text": " @notice It transfers ETH to a recipient with a specified gas limit.\n         If the original transfers fails, it wraps to WETH and transfers the WETH to recipient.\n @param _WETH WETH address\n @param _to Recipient address\n @param _amount Amount to transfer\n @param _gasLimit Gas limit to perform the ETH transfer"
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferETHAndWrapIfFailWithGasLimit",
									"nameLocation": "817:37:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "895:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "887:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "916:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "908:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_gasLimit",
												"nameLocation": "941:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "933:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:102:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:0:1"
									},
									"scope": 62,
									"src": "808:415:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 63,
							"src": "415:810:1",
							"usedErrors": []
						}
					],
					"src": "32:1194:1"
				},
				"id": 1
			}
		}
	}
}